{"version":3,"sources":["components/api.jsx","components/Searchbar/Searchbar.jsx","components/App.jsx","index.js"],"names":["fetchImages","imageTags","page","a","axios","get","response","data","hits","Searchbar","onSearch","className","onSubmit","e","preventDefault","target","elements","value","type","name","autoComplete","autoFocus","placeholder","App","state","gallery","requestState","handleFormSubmit","setState","_","prevState","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sSAQaA,EAAW,uCAAG,WAAOC,EAAWC,GAAlB,eAAAC,EAAA,sEACFC,IAAMC,IAAN,4EACgDJ,EADhD,yEAC0HC,EAD1H,iBADE,cACnBI,EADmB,yBAIlBA,EAASC,KAAKC,MAJI,2CAAH,wD,OCRXC,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAM1B,OACE,wBAAQC,UAAU,YAAlB,SACE,uBAAMA,UAAU,aAAaC,SAPZ,SAAAC,GACnBA,EAAEC,iBACFJ,EAASG,EAAEE,OAAOC,SAASf,UAAUgB,QAKnC,UACE,wBAAQC,KAAK,SAASP,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAGF,uBACEA,UAAU,mBACVQ,KAAK,YACLD,KAAK,OACLE,aAAa,MACbC,WAAS,EACTC,YAAY,mCCbTC,EAAb,4MACEC,MAAQ,CACNvB,UAAW,GACXC,KAAM,EACNuB,QAAS,GAGTC,aAAc,QAPlB,EAWEC,iBAAmB,SAAA1B,GACjB,EAAK2B,SAAS,CAAE3B,eAZpB,+FAgBE,WAAyB4B,EAAGC,GAA5B,eAAA3B,EAAA,yDACM2B,EAAU7B,YAAc8B,KAAKP,MAAMvB,UADzC,gCAE0BD,EAAY+B,KAAKP,MAAMvB,WAFjD,OAEUwB,EAFV,OAGIM,KAAKH,SAAS,CAAEH,YAHpB,gDAhBF,6EAuBE,WACE,OACE,8BACE,cAAC,EAAD,CAAWf,SAAUqB,KAAKJ,yBA1BlC,GAAyBK,aCAzBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4e1f4583.chunk.js","sourcesContent":["import axios from 'axios';\n\n// const API_KEY = '22578935-bf31ef834e5011bcd0b44501d';\n\n// axios.default.baseURL = 'https://pixabay.com/api/';\n\n// const params = 'fields = id;webformatURL;largeImageURL';\n\nexport const fetchImages = async (imageTags, page) => {\n  const response = await axios.get(\n    `https://pixabay.com/api/?key=22578935-bf31ef834e5011bcd0b44501d&q=${imageTags}&image_type=photo&orientation=horizontal&safesearch=true&page=${page}&per_page=12`,\n  );\n  return response.data.hits;\n};\n","export const Searchbar = ({ onSearch }) => {\n  const handleSearch = e => {\n    e.preventDefault();\n    onSearch(e.target.elements.imageTags.value);\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handleSearch}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          name=\"imageTags\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n};\n","import { Component } from 'react';\nimport { fetchImages } from './api';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\n// import { ImageGallery } from './ImageGallery/ImageGallery';\n// import { ImageGalleryItem } from './ImageGalleryItem/ImageGalleryItem';\n\nexport class App extends Component {\n  state = {\n    imageTags: '',\n    page: 1,\n    gallery: [\n      // {id: id, src: webformatURL},\n    ],\n    requestState: 'idle',\n  };\n\n  //Делаем запись в state\n  handleFormSubmit = imageTags => {\n    this.setState({ imageTags });\n  };\n\n  // Реакция на изменение state, делаем запросы\n  async componentDidUpdate(_, prevState) {\n    if (prevState.imageTags !== this.state.imageTags) {\n      const gallery = await fetchImages(this.state.imageTags);\n      this.setState({ gallery });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Searchbar onSearch={this.handleFormSubmit} />\n        {/* <ImageGallery gallery={this.state.gallery.webformatURL} /> */}\n        {/* <ImageGalleryItem key={this.state.gallery.id}\n          src={this.state.gallery.webformatURL} /> */}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}