{"version":3,"sources":["components/services/api.jsx","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","components/Loader/Loader.jsx","components/App/App.jsx","index.js"],"names":["axios","defaults","baseURL","params","key","image_type","fetchImages","imageTags","page","a","get","response","data","hits","Searchbar","onSearch","className","onSubmit","e","preventDefault","target","elements","value","reset","type","name","autoComplete","autoFocus","placeholder","ImageGalleryItem","webformatURL","largeImageURL","tags","handleSelectedImage","src","alt","onClick","ImageGallery","gallery","map","id","Button","handleLoadMore","modalRoot","document","querySelector","Modal","handleKeydown","code","props","onClose","handleBackdropClick","currentTarget","console","log","window","addEventListener","this","removeEventListener","createPortal","children","Component","Spinner","color","height","width","timeout","App","state","requestStatus","showModal","handleFormSubmit","setState","prevState","toggleModal","handleScroll","scrollTo","top","documentElement","scrollHeight","behavior","_","length","toast","isLoading","showGallery","position","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.31df3679.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '22578935-bf31ef834e5011bcd0b44501d';\nconst BASE_URL = 'https://pixabay.com/api/';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  key: API_KEY,\n  image_type: 'photo',\n};\n\nexport const fetchImages = async (imageTags, page) => {\n  const response = await axios.get(\n    `?q=${imageTags}&orientation=horizontal&safesearch=true&page=${page}&per_page=12`,\n  );\n  return response.data.hits;\n};\n","import PropTypes from 'prop-types';\nimport './Searchbar.css';\n\nexport const Searchbar = ({ onSearch }) => {\n  const handleSearch = e => {\n    e.preventDefault();\n    onSearch(e.target.elements.imageTags.value);\n    e.target.reset();\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handleSearch}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          name=\"imageTags\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n};\n\nSearchbar.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport './ImageGalleryItem.css';\n\nexport const ImageGalleryItem = ({\n  webformatURL,\n  largeImageURL,\n  imageTags,\n  tags,\n  handleSelectedImage,\n}) => {\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        src={webformatURL}\n        alt={tags}\n        className=\"ImageGalleryItem-image\"\n        onClick={() => handleSelectedImage(largeImageURL, imageTags)}\n      />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  imageTags: PropTypes.string,\n  tags: PropTypes.string,\n  handleSelectedImage: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { ImageGalleryItem } from 'components/ImageGalleryItem/ImageGalleryItem';\nimport './ImageGallery.css';\n\nexport const ImageGallery = ({ gallery, handleSelectedImage }) => {\n  return (\n    <ul className=\"ImageGallery\">\n      {gallery.map(({ id, largeImageURL, webformatURL }) => (\n        <ImageGalleryItem\n          key={id}\n          largeImageURL={largeImageURL}\n          webformatURL={webformatURL}\n          handleSelectedImage={handleSelectedImage}\n        />\n      ))}\n    </ul>\n  );\n};\n\nImageGallery.propTypes = {\n  gallery: PropTypes.arrayOf(PropTypes.object).isRequired,\n  handleSelectedImage: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport './Button.css';\n\nexport const Button = ({ handleLoadMore }) => {\n  return (\n    <button type=\"button\" className=\"Button\" onClick={handleLoadMore}>\n      Load more\n    </button>\n  );\n};\n\nButton.propTypes = {\n  handleLoadMore: PropTypes.func.isRequired,\n};\n","import { Component } from 'react';\nimport { createPortal } from 'react-dom';\n// import { ImageGalleryItem } from 'components/ImageGalleryItem/ImageGalleryItem';\nimport './Modal.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport class Modal extends Component {\n  // закрытие модалки по Esc\n  componentDidMount() {\n    console.log('ModalcomponentDidMount ');\n    window.addEventListener('keydown', this.handleKeydown);\n  }\n\n  componentWillUnmount() {\n    console.log('ModalcomponentWillMount ');\n    window.removeEventListener('keydown', this.handleKeydown);\n  }\n\n  handleKeydown = e => {\n    if (e.code === 'Escape') {\n      // console.log('esc')\n      this.props.onClose();\n    }\n  };\n\n  // Закрытие по клику на бэкдроп\n\n  handleBackdropClick = e => {\n    // console.log('currentTarget', e.currentTarget);\n    // console.log('target', e.target);\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const { largeImageURL, tags } = this.props;\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">\n          {this.props.children}\n          <img src={largeImageURL} alt={tags} />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n","import Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nexport const Spinner = () => {\n  return <Loader type=\"Rings\" color=\"#00BFFF\" height={80} width={80} timeout={3000} />;\n};\n","import { Component } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { fetchImages } from '../services/api';\nimport { Searchbar } from '../Searchbar/Searchbar';\nimport { ImageGallery } from '../ImageGallery/ImageGallery';\nimport { Button } from '../Button/Button';\nimport { Modal } from '../Modal/Modal';\nimport { Spinner } from '../Loader/Loader';\nimport './App.css';\n\nexport class App extends Component {\n  state = {\n    imageTags: '',\n    page: 1,\n    gallery: [],\n    requestStatus: 'idle',\n    showModal: false,\n    largeImageURL: '',\n    tags: '',\n  };\n\n  //Делаем запись в state\n\n  handleFormSubmit = imageTags => {\n    this.setState({ page: 1, gallery: [], imageTags });\n  };\n\n  handleLoadMore = () => {\n    // this.setState({ page: this.state.page + 1 });\n    this.setState(prevState => ({ page: prevState.page + 1 }));\n  };\n\n  // Управление модалкой\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  handleSelectedImage = (largeImageURL, tags) => {\n    this.setState({ largeImageURL, tags });\n    this.toggleModal();\n  };\n\n  handleScroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  // Реакция на изменение state, делаем запросы\n  async componentDidUpdate(_, prevState) {\n    const { imageTags, page } = this.state;\n\n    if (prevState.imageTags !== imageTags || prevState.page !== page)\n      try {\n        this.setState({ requestStatus: 'pending' });\n        const gallery = await fetchImages(imageTags, page);\n\n        this.setState(\n          prevState => ({\n            gallery: [...prevState.gallery, ...gallery],\n            requestStatus: 'resolved',\n          }),\n          () => {\n            this.handleScroll();\n          },\n        );\n        if (gallery.length === 0) {\n          return toast('Sorry, there are no images matching your search query. Please try again.');\n        }\n      } catch (error) {\n        console.log(error);\n      }\n  }\n\n  render() {\n    const { gallery, showModal, largeImageURL, imageTags, requestStatus } = this.state;\n    const isLoading = requestStatus === 'pending';\n    const showGallery = gallery.length > 0 && !isLoading;\n\n    return (\n      <div>\n        {showModal && (\n          <Modal onClose={this.toggleModal} largeImageURL={largeImageURL} alt={imageTags} />\n        )}\n        <Searchbar onSearch={this.handleFormSubmit} />\n        {isLoading && <Spinner />}\n        <ImageGallery gallery={gallery} handleSelectedImage={this.handleSelectedImage} />\n        {showGallery && <Button handleLoadMore={this.handleLoadMore} />}\n        <Toaster position=\"top-right\" />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/App/App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}